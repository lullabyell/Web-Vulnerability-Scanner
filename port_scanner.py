import socket
from urllib.parse import urlparse
import threading

class PortScanner:
    def __init__(self, url, num_threads=100):
        parsed_url = urlparse(url)
        self.hostname = parsed_url.hostname
        self.num_threads = num_threads
        self.lock = threading.Lock()
        self.open_ports = []

    def scan_port(self, port):
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(0.5)
            result = sock.connect_ex((self.hostname, port))
            if result == 0:
                with self.lock:
                    self.open_ports.append(port)
            sock.close()
        except Exception as e:
            print(f"Error scanning port {port}: {e}")

    def scan(self):
        if not self.hostname:
            return self.open_ports

        common_ports = [
            20, 21, 22, 23, 25, 53, 80, 110, 111, 135, 139, 143, 443, 445, 993, 995, 1723, 3306, 3389, 5900, 8080
        ]

        threads = []
        for port in common_ports:
            thread = threading.Thread(target=self.scan_port, args=(port,))
            threads.append(thread)
            thread.start()

            if len(threads) >= self.num_threads:
                for thread in threads:
                    thread.join()
                threads = []

        for thread in threads:
            thread.join()

        return self.open_ports
